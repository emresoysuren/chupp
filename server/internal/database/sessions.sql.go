// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: sessions.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createSession = `-- name: CreateSession :one
INSERT INTO sessions (user_id, created_at, session_key)
VALUES ($1, NOW(), $2)
RETURNING user_id, created_at, session_key
`

type CreateSessionParams struct {
	UserID     uuid.UUID
	SessionKey string
}

func (q *Queries) CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error) {
	row := q.db.QueryRowContext(ctx, createSession, arg.UserID, arg.SessionKey)
	var i Session
	err := row.Scan(&i.UserID, &i.CreatedAt, &i.SessionKey)
	return i, err
}

const getSession = `-- name: GetSession :one
SELECT user_id, created_at, session_key FROM sessions
WHERE user_id = $1
`

func (q *Queries) GetSession(ctx context.Context, userID uuid.UUID) (Session, error) {
	row := q.db.QueryRowContext(ctx, getSession, userID)
	var i Session
	err := row.Scan(&i.UserID, &i.CreatedAt, &i.SessionKey)
	return i, err
}
